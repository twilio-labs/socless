# Socless core infrastructure and functions
service: socless

provider:
  name: aws
  runtime: python3.7
  variableSyntax: "\\${{([ ~:a-zA-Z0-9._\\'\",\\-\\/\\(\\)]+?)}}"
  stage: ${{opt:stage}}
  region: ${{opt:region}}
  role:
    Fn::GetAtt: [LambdaExecutionRole, "Arn"]
  versionFunctions: false
  memorySize: 128
  timeout: 10
  environment:
    SOCLESS_VAULT:
      Ref: SoclessVault
    SOCLESS_RESULTS_TABLE:
      Ref: ExecutionResultsTable
  vpc:
    securityGroupIds:
      - Fn::Sub: ${SoclessLambdaVpcSG.GroupId}
    subnetIds:
      - Ref: SoclessPrivateFunctionSubnet

plugins:
  - socless_integration_packager

custom:
  soclessPackager:
    buildDir: build

resources:
  - ${{file(resources/dynamodb.yml)}} # DynamoDB Tables
  - ${{file(resources/iam.yml)}} # IAM Resources
  - ${{file(resources/sfn.yml)}} # Step Functions Resources
  - ${{file(resources/s3.yml)}} # S3 Resources
  - ${{file(resources/kms.yml)}} # KMS Resources
  - ${{file(resources/vpc.yml)}} # VPC Resources
  - ${{file(resources/sg.yml)}} # Security Group resources
  - ${{file(resources/apigateway.yml)}} # API Gateway
  - Outputs:
      MergeParallelOutput:
        Description: Merges the output from a parallel state into a unified object
        Value:
          Fn::Sub: ${MergeParallelOutputLambdaFunction.Arn}

      SaveMessageResponseToken:
        Description: Save the task token created when the Socless Messages Response Activity state is used
        Value:
          Fn::Sub: ${SaveMessageResponseTokenLambdaFunction.Arn}

      Counter:
        Description: Simple counter functionality
        Value:
          Fn::Sub: ${CounterLambdaFunction.Arn}

      SetInvestigationStatus:
        Description: Set the internal status of an Socless investigation
        Value:
          Fn::Sub: ${SetInvestigationStatusLambdaFunction.Arn}

      AddCustomMapping:
        Description: Add a custom mapping to the CustomMappings Table
        Value:
          Fn::Sub: ${AddCustomMappingLambdaFunction.Arn}

      QueryCustomMapping:
        Description: Retrieve a custom mapping from the CustomMappings Table
        Value:
          Fn::Sub: ${QueryCustomMappingLambdaFunction.Arn}

      CreateEvents:
        Description: Create events from within a playbook
        Value:
          Fn::Sub: ${CreateEventsLambdaFunction.Arn}

      CacheResults:
        Description: Cache returned results
        Value:
          Fn::Sub: ${CacheResultsLambdaFunction.Arn}
      SoclessLogFindings:
        Description: Generate and upload SOCless log findings to a logging bucket
        Value:
          Fn::Sub: ${SoclessLogFindingsLambdaFunction.Arn}

package:
  individually: true

functions:
  MergeParallelOutput:
    handler: lambda_function.lambda_handler
    name: _socless_merge_parallel_output
    description: Merges the output from a Parallel state into a unified object
    package:
      include:
        - functions/merge_parallel_output

  SaveMessageResponseToken:
    handler: lambda_function.lambda_handler
    name: _socless_save_msg_resp_token
    description: Save the task token created when the Socless Messages Response Activity state is used
    environment:
      AWAIT_MESSAGE_RESPONSE_ARN:
        Ref: AwaitMessageResponseActivity
      MESSAGE_RESPONSES_TABLE:
        Ref: MessageResponsesTable
    package:
      include:
        - functions/save_msg_resp_token

  Counter:
    handler: lambda_function.lambda_handler
    name: _socless_counter
    description: Simple counter functionality
    package:
      include:
        - functions/counter

  SetInvestigationStatus:
    handler: lambda_function.lambda_handler
    name: socless_set_investigation_status
    environment:
      SOCLESS_EVENTS_TABLE:
        Ref: EventsTable
    description: Socless integration to set an investigations status
    package:
      include:
        - functions/set_investigation_status

  Playground:
    handler: lambda_function.lambda_handler
    name: _socless_playground
    description: Function for playing around with Socless' Configuration
    package:
      include:
        - functions/playground

  AddCustomMapping:
    handler: lambda_function.lambda_handler
    name: socless_add_custom_mapping
    description: Add a custom mapping to the CustomMappings Table
    environment:
      SOCLESS_CUSTOM_MAPPINGS_TABLE:
        Ref: CustomMappingsTable
    package:
      include:
        - functions/add_custom_mapping

  QueryCustomMapping:
    handler: lambda_function.lambda_handler
    name: socless_query_custom_mapping
    description: Retrieve a custom mapping from the CustomMappings Table
    environment:
      SOCLESS_CUSTOM_MAPPINGS_TABLE:
        Ref: CustomMappingsTable
    package:
      include:
        - functions/query_custom_mapping

  CreateEvents:
    handler: lambda_function.lambda_handler
    name: socless_create_events
    description: Create events from within a playbook
    memorySize: 512
    timeout: 300
    environment:
      SOCLESS_EVENTS_TABLE:
        Ref: EventsTable
      SOCLESS_PLAYBOOKS_TABLE:
        Ref: PlaybooksTable
    package:
      include:
        - functions/create_events

  CacheResults:
    handler: lambda_function.lambda_handler
    name: socless_cache_results
    description: Cache return results
    package:
      include:
        - functions/cache_results

  SoclessLogFindings:
    handler: lambda_function.lambda_handler
    name: socless_log_findings
    description: Generate and upload SOCless log findings to a logging bucket
    environment:
      SOCLESS_Logs:
        Ref: SoclessLogs
    package:
      include:
        - functions/socless_log_findings
